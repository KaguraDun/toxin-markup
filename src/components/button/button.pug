//- available properties:
  type: button | reset | submit
  size: small | medium
  width: small | full | auto;
  style: filled | border | borderless | page | page_selected | page_next;
  text: string;
  href: string;
  withArrow: boolean;
  disabled: boolean;
  isHovered: boolean;

mixin button(options)
  -
    const {
      type = 'button',
      size = 'medium',
      width = 'auto',
      style = 'border',
      text = "",
      href = null,
      withArrow = false,
      disabled = false,
      isHovered = false,
    } = options

  -
    const classListStyle = {
      borderless: 'button_style_borderless',
      border: 'button_style_border',
      filled : 'button_style_filled',
      page: 'button_style_page',
      page_selected: 'button_style_page-selected',
      page_next: 'button_style_page-next',
    }
  -
    const classListSize = {
      small: 'button_size_small',
      medium: 'button_size_medium',
    }
  -
    const classListWidth = {
      small: 'button_width_small',
      full: 'button_width_full',
      auto: 'button_width_auto',
    }
  -
    const buttonClassNames = {
      'button' : true,
      [classListStyle[style]] : true,
      [classListSize[size]]: true,
      [classListWidth[width]]: true,
      'button_hovered' : isHovered,
    }

  if href
    a(class=buttonClassNames, href=href)
      span.button__text= text
      if (withArrow)
        span.button__icon.button__icon_with-arrow
  else
    button(type=type, class=buttonClassNames, disabled=disabled)
      span.button__text= text
      if (withArrow)
        span.button__icon.button__icon_with-arrow 
